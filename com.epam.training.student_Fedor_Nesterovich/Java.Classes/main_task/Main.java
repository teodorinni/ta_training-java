import java.util.Calendar;
import java.util.Objects;
import java.util.concurrent.ThreadLocalRandom;

public class Main {
    public static void main(String[] args) {
        String[] fullNames = {"Старикова Алиса Богдановна", "Исаев Артём Матвеевич", "Алексеев Владислав Иванович", "Иванов Глеб Владимирович", "Савельева Ксения Михайловна", "Корнеев Георгий Владимирович", "Шевелева Дарья Данииловна", "Андреева Злата Егоровна", "Калинина Ева Кирилловна", "Осипова Полина Михайловна", "Миронов Ибрагим Игнатиевич", "Чернышева Анна Фёдоровна", "Романов Антон Романович", "Успенская Айлин Кирилловна", "Молчанова Анна Романовна", "Лосев Роман Захарович", "Масленников Андрей Леонидович", "Щербакова Вероника Тихоновна", "Федоров Артём Ильич", "Соловьева Марина Захаровна", "Королева Майя Ивановна", "Козлова Маргарита Игоревна", "Егорова Серафима Артёмовна", "Попова Таисия Никитична", "Сорокин Михаил Алиевич", "Гончаров Максим Ярославович", "Калмыкова Таисия Филипповна", "Шестакова Анастасия Фёдоровна", "Кузнецов Мирон Артёмович", "Шапошников Михаил Даниилович", "Шестакова Мария Романовна", "Логинова Ольга Александровна", "Васильев Матвей Даниилович", "Смирнова Милана Егоровна", "Михеева Ксения Макаровна", "Маслова Дарья Дмитриевна", "Виноградов Андрей Иванович", "Кузнецов Роберт Кириллович", "Софронова Елизавета Антоновна", "Петрова Анастасия Ивановна", "Матвеева Софья Александровна", "Лебедева Валерия Артёмовна", "Андреева Надежда Ильинична", "Павлов Егор Александрович", "Иванов Владимир Дмитриевич", "Климова Софья Даниловна", "Фомина Кира Никитична", "Муравьева Алиса Данииловна", "Крючкова Елизавета Дмитриевна", "Власова Валерия Марковна", "Белоусов Владимир Максимович", "Макарова Екатерина Денисовна", "Сухарев Владислав Иванович", "Грибов Иван Евгеньевич", "Дубровин Никита Александрович", "Кузнецов Дмитрий Владимирович", "Жуков Пётр Станиславович", "Мельников Антон Антонович", "Кожевникова Виктория Кирилловна","Большакова Алиса Ильинична", "Морозова Елизавета Матвеевна", "Миронов Михаил Артёмович", "Осипов Даниил Дмитриевич", "Чернышева Полина Владимировна", "Лаврова Милана Платоновна", "Никифоров Роман Владиславович", "Соловьев Савелий Артёмович", "Яковлев Никита Романович", "Зайцев Елисей Станиславович", "Андрианов Марк Никитич", "Жуков Даниил Андреевич", "Ситников Максим Егорович", "Шубина Амелия Константиновна", "Казаков Максим Иванович", "Моисеева Мария Александровна", "Сычева Мария Львовна", "Жданова Алиса Николаевна", "Осипова Мария Ильинична", "Чернова Анастасия Кирилловна", "Тихонова Ксения Марковна", "Павлов Роман Фёдорович", "Киселев Тимофей Александрович", "Аксенов Михаил Максимович", "Краснова Агата Максимовна", "Коновалова Мирослава Андреевна", "Колосов Александр Петрович", "Савельев Матвей Михайлович", "Панова Злата Владимировна", "Савельева Вера Артёмовна", "Завьялов Егор Эминович", "Суворов Константин Артёмович", "Сафонов Станислав Егорович", "Быков Семён Миронович", "Кузнецова Виктория Святославовна", "Захарова Дарья Романовна", "Соболева Злата Вадимовна", "Бирюкова Яна Романовна", "Дмитриев Артур Даниэльевич", "Суворов Артём Павлович", "Егоров Даниил Ярославович"};
        String[] birthDates = {"2003-06-18", "2005-05-31", "2003-03-21", "2000-02-02", "2000-07-02", "2000-12-24", "2004-05-05", "2000-07-14", "2000-08-10", "2004-11-24", "2002-12-08", "2002-11-08", "2001-06-01", "2000-01-03", "2000-05-03", "2005-03-13", "2001-12-31", "2004-04-04", "2002-12-25", "2003-01-03", "2000-03-17", "2004-10-08", "2005-05-06", "2001-05-04", "2001-01-14", "2003-10-27", "2002-01-15", "2005-03-23", "2004-06-25", "2000-04-23", "2001-11-24", "2000-05-24", "2001-01-09", "2003-09-06", "2000-12-19", "2001-01-08", "2004-09-24", "2005-01-17", "2002-08-20", "2000-01-10", "2003-04-13", "2001-12-18", "2000-05-31", "2000-11-04", "2005-12-04", "2001-08-12", "2005-05-03", "2000-05-01", "2005-06-26", "2001-04-18", "2000-09-03", "2000-04-30", "2000-02-07", "2002-04-22", "2002-03-11", "2000-05-13", "2005-03-24", "2000-03-23", "2000-08-19", "2002-07-09", "2003-06-27", "2004-02-19", "2001-07-08", "2005-07-11", "2000-09-14", "2002-03-02", "2003-07-27", "2000-05-17", "2005-11-04", "2004-10-21", "2001-06-23", "2002-03-13", "2000-03-30", "2004-03-23", "2004-11-16", "2003-11-22", "2002-07-23", "2004-11-28", "2003-06-04", "2002-06-17", "2003-08-28", "2005-11-23", "2000-12-24", "2000-08-02", "2004-06-25", "2005-02-01", "2005-08-02", "2000-08-29", "2003-07-31", "2005-06-28", "2004-04-05", "2004-05-31", "2005-04-25", "2001-12-08", "2000-06-04", "2004-02-18", "2003-06-13", "2005-08-13", "2002-07-07", "2004-10-02"};
        String[] addresses = {"Брест", "Витебск", "Гомель", "Гродно", "Минск", "Могилев"};
        String[] phoneCodes = {"25", "29", "33", "44"};
        String[] faculties = {"Биологический", "Физический", "Химический", "Экономический", "Мехмат", "ФПМИ", "ФМО", "Исторический", "Филологический"};
        String[] groups = {"А", "Б"};

        Student[] students = new Student[fullNames.length];

//      Add students to array
        for (int i = 0; i < fullNames.length; i++) {
            String surname = fullNames[i].split(" ")[0];
            String name = fullNames[i].split(" ")[1];
            String patronymic = fullNames[i].split(" ")[2];
            String birthDate = birthDates[i];
            String address = addresses[ThreadLocalRandom.current().nextInt(0, addresses.length)];
            StringBuilder phone = new StringBuilder();
            for (int j = 0; j < 7; j++) {
                phone.append(ThreadLocalRandom.current().nextInt(0, 10));
            }
            String phoneNumber = "+375" + phoneCodes[ThreadLocalRandom.current().nextInt(0, phoneCodes.length)] + phone;
            String faculty = faculties[ThreadLocalRandom.current().nextInt(0, faculties.length)];
            int course = ThreadLocalRandom.current().nextInt(1, 5);
            String group = course + groups[ThreadLocalRandom.current().nextInt(0, groups.length)];
            students[i] = new Student(surname, name, patronymic, birthDate, address, phoneNumber, faculty, course, group);
        }

//      Run methods
        studByFaculty("Мехмат", students);
        studByFacultyCourse("Экономический", 2, students);
        studOlderYear(2004, students);
        studByGroup("1а", students);
    }

    public static void studByFaculty(String faculty, Student[] students) {
        System.out.println("Students from " + faculty + " faculty:");
        for (Student student : students) {
            if (Objects.equals(student.getFaculty().toLowerCase(), faculty.toLowerCase())) {
                System.out.println(student);
            }
        }
    }

    public static void studByFacultyCourse(String faculty, int course, Student[] students) {
        System.out.println("Students from " + faculty + " faculty and " + course + " course:");
        for (Student student : students) {
            if (Objects.equals(student.getFaculty().toLowerCase(), faculty.toLowerCase()) && student.getCourse() == course) {
                System.out.println(student);
            }
        }
    }

    public static void studOlderYear (int year, Student[] students) {
        System.out.println("Students born after " + year + " year:");
        Calendar c = Calendar.getInstance();
        c.set(year, Calendar.JANUARY, 1);
        for (Student student : students) {
            if (student.getBirthDate().after(c)) {
                System.out.println(student);
            }
        }
    }

    public static void studByGroup(String group, Student[] students) {
        System.out.println("Students from " + group + " group:");
        for (Student student : students) {
            if (Objects.equals(student.getGroup().toLowerCase(), group.toLowerCase())) {
                System.out.println(student);
            }
        }
    }
}